import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, L as createEventDispatcher, e as element, g as claim_element, z as children, p as detach_dev, h as attr_dev, j as add_location, k as insert_dev, x as append_dev, G as listen_dev, n as noop, J as run_all, c as create_component, b as claim_component, m as mount_component, t as transition_in, l as transition_out, o as destroy_component, y as text, a as space, A as claim_text, f as claim_space, D as set_data_dev, K as group_outros, I as check_outros, r as validate_each_argument, q as empty, u as destroy_each } from './client.f4129bdd.js';
import { S as SvelteSeo } from './SvelteSeo.1dedfaff.js';
import { g as gql, D as DefaultClient } from './bundle.esm.ce987c6b.js';

/* src/components/Modal.svelte generated by Svelte v3.35.0 */
const file$2 = "src/components/Modal.svelte";

function create_fragment$2(ctx) {
	let div1;
	let div0;
	let img;
	let img_src_value;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			img = claim_element(div0_nodes, "IMG", { src: true, alt: true, class: true });
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*imgModal*/ ctx[0])) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "test");
			attr_dev(img, "class", "svelte-8jqkah");
			add_location(img, file$2, 12, 4, 251);
			attr_dev(div0, "class", "card svelte-8jqkah");
			add_location(div0, file$2, 11, 0, 228);
			attr_dev(div1, "class", "overlay svelte-8jqkah");
			add_location(div1, file$2, 10, 0, 184);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
			append_dev(div0, img);

			if (!mounted) {
				dispose = [
					listen_dev(img, "click", /*closeModal*/ ctx[1], false, false, false),
					listen_dev(div1, "click", /*closeModal*/ ctx[1], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*imgModal*/ 1 && img.src !== (img_src_value = /*imgModal*/ ctx[0])) {
				attr_dev(img, "src", img_src_value);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Modal", slots, []);
	let { imgModal } = $$props;
	const dispatch = createEventDispatcher();

	function closeModal() {
		dispatch("fermeture");
	}

	const writable_props = ["imgModal"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Modal> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("imgModal" in $$props) $$invalidate(0, imgModal = $$props.imgModal);
	};

	$$self.$capture_state = () => ({
		createEventDispatcher,
		imgModal,
		dispatch,
		closeModal
	});

	$$self.$inject_state = $$props => {
		if ("imgModal" in $$props) $$invalidate(0, imgModal = $$props.imgModal);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [imgModal, closeModal];
}

class Modal extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, { imgModal: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Modal",
			options,
			id: create_fragment$2.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*imgModal*/ ctx[0] === undefined && !("imgModal" in props)) {
			console.warn("<Modal> was created without expected prop 'imgModal'");
		}
	}

	get imgModal() {
		throw new Error("<Modal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set imgModal(value) {
		throw new Error("<Modal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/Produit.svelte generated by Svelte v3.35.0 */
const file$1 = "src/components/Produit.svelte";

// (53:4) {#if toggle}
function create_if_block$1(ctx) {
	let modal;
	let current;

	modal = new Modal({
			props: { imgModal: /*imgModalProduit*/ ctx[4] },
			$$inline: true
		});

	modal.$on("fermeture", /*toggleFunc*/ ctx[14]);

	const block = {
		c: function create() {
			create_component(modal.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(modal.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(modal, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const modal_changes = {};
			if (dirty & /*imgModalProduit*/ 16) modal_changes.imgModal = /*imgModalProduit*/ ctx[4];
			modal.$set(modal_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(modal.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(modal.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(modal, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$1.name,
		type: "if",
		source: "(53:4) {#if toggle}",
		ctx
	});

	return block;
}

function create_fragment$1(ctx) {
	let article;
	let header;
	let h2;
	let t0;
	let t1;
	let p;
	let t2;
	let br;
	let t3;
	let span;
	let t4;
	let t5;
	let t6;
	let t7;
	let img;
	let img_src_value;
	let t8;
	let div;
	let button;
	let t9;
	let t10;
	let current;
	let mounted;
	let dispose;
	let if_block = /*toggle*/ ctx[13] && create_if_block$1(ctx);

	const block = {
		c: function create() {
			article = element("article");
			header = element("header");
			h2 = element("h2");
			t0 = text(/*nomProduit*/ ctx[1]);
			t1 = space();
			p = element("p");
			t2 = text(/*descriptionProduit*/ ctx[5]);
			br = element("br");
			t3 = space();
			span = element("span");
			t4 = text("Prix : ");
			t5 = text(/*prixProduit*/ ctx[2]);
			t6 = text(" €");
			t7 = space();
			img = element("img");
			t8 = space();
			div = element("div");
			button = element("button");
			t9 = text("Ajouter au Panier");
			t10 = space();
			if (if_block) if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			article = claim_element(nodes, "ARTICLE", { class: true });
			var article_nodes = children(article);
			header = claim_element(article_nodes, "HEADER", { class: true });
			var header_nodes = children(header);
			h2 = claim_element(header_nodes, "H2", {});
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, /*nomProduit*/ ctx[1]);
			h2_nodes.forEach(detach_dev);
			t1 = claim_space(header_nodes);
			p = claim_element(header_nodes, "P", {});
			var p_nodes = children(p);
			t2 = claim_text(p_nodes, /*descriptionProduit*/ ctx[5]);
			br = claim_element(p_nodes, "BR", {});
			t3 = claim_space(p_nodes);
			span = claim_element(p_nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			t4 = claim_text(span_nodes, "Prix : ");
			t5 = claim_text(span_nodes, /*prixProduit*/ ctx[2]);
			t6 = claim_text(span_nodes, " €");
			span_nodes.forEach(detach_dev);
			p_nodes.forEach(detach_dev);
			header_nodes.forEach(detach_dev);
			t7 = claim_space(article_nodes);
			img = claim_element(article_nodes, "IMG", { src: true, alt: true, class: true });
			t8 = claim_space(article_nodes);
			div = claim_element(article_nodes, "DIV", { class: true });
			var div_nodes = children(div);

			button = claim_element(div_nodes, "BUTTON", {
				class: true,
				"data-item-id": true,
				"data-item-price": true,
				"data-item-categories": true,
				"data-item-url": true,
				"data-item-image": true,
				"data-item-name": true,
				"data-item-custom1-name": true,
				"data-item-custom1-options": true,
				"data-item-custom1-required": true,
				"data-item-custom2-name": true,
				"data-item-custom2-options": true,
				"data-item-custom3-name": true,
				"data-item-custom3-options": true,
				"data-item-min-price": true
			});

			var button_nodes = children(button);
			t9 = claim_text(button_nodes, "Ajouter au Panier");
			button_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			t10 = claim_space(article_nodes);
			if (if_block) if_block.l(article_nodes);
			article_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h2, file$1, 25, 2, 497);
			add_location(br, file$1, 26, 25, 544);
			attr_dev(span, "class", "svelte-1ernrbq");
			add_location(span, file$1, 27, 4, 555);
			add_location(p, file$1, 26, 2, 521);
			attr_dev(header, "class", "svelte-1ernrbq");
			add_location(header, file$1, 24, 0, 486);
			if (img.src !== (img_src_value = /*imgProduit*/ ctx[0])) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", /*nomProduit*/ ctx[1]);
			attr_dev(img, "class", "svelte-1ernrbq");
			add_location(img, file$1, 30, 2, 610);
			attr_dev(button, "class", "snipcart-add-item svelte-1ernrbq");
			attr_dev(button, "data-item-id", /*idProduit*/ ctx[3]);
			attr_dev(button, "data-item-price", /*prixProduit*/ ctx[2]);
			attr_dev(button, "data-item-categories", /*itemGategorie*/ ctx[6]);
			attr_dev(button, "data-item-url", "/shop");
			attr_dev(button, "data-item-image", /*imgProduit*/ ctx[0]);
			attr_dev(button, "data-item-name", /*nomProduit*/ ctx[1]);
			attr_dev(button, "data-item-custom1-name", /*custom1*/ ctx[7]);
			attr_dev(button, "data-item-custom1-options", /*options1*/ ctx[8]);
			attr_dev(button, "data-item-custom1-required", "true");
			attr_dev(button, "data-item-custom2-name", /*custom2*/ ctx[9]);
			attr_dev(button, "data-item-custom2-options", /*options2*/ ctx[10]);
			attr_dev(button, "data-item-custom3-name", /*custom3*/ ctx[11]);
			attr_dev(button, "data-item-custom3-options", /*options3*/ ctx[12]);
			attr_dev(button, "data-item-min-price", "15");
			add_location(button, file$1, 32, 2, 697);
			attr_dev(div, "class", "btns svelte-1ernrbq");
			add_location(div, file$1, 31, 2, 676);
			attr_dev(article, "class", "svelte-1ernrbq");
			add_location(article, file$1, 23, 0, 476);
		},
		m: function mount(target, anchor) {
			insert_dev(target, article, anchor);
			append_dev(article, header);
			append_dev(header, h2);
			append_dev(h2, t0);
			append_dev(header, t1);
			append_dev(header, p);
			append_dev(p, t2);
			append_dev(p, br);
			append_dev(p, t3);
			append_dev(p, span);
			append_dev(span, t4);
			append_dev(span, t5);
			append_dev(span, t6);
			append_dev(article, t7);
			append_dev(article, img);
			append_dev(article, t8);
			append_dev(article, div);
			append_dev(div, button);
			append_dev(button, t9);
			append_dev(article, t10);
			if (if_block) if_block.m(article, null);
			current = true;

			if (!mounted) {
				dispose = listen_dev(img, "click", /*toggleFunc*/ ctx[14], false, false, false);
				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (!current || dirty & /*nomProduit*/ 2) set_data_dev(t0, /*nomProduit*/ ctx[1]);
			if (!current || dirty & /*descriptionProduit*/ 32) set_data_dev(t2, /*descriptionProduit*/ ctx[5]);
			if (!current || dirty & /*prixProduit*/ 4) set_data_dev(t5, /*prixProduit*/ ctx[2]);

			if (!current || dirty & /*imgProduit*/ 1 && img.src !== (img_src_value = /*imgProduit*/ ctx[0])) {
				attr_dev(img, "src", img_src_value);
			}

			if (!current || dirty & /*nomProduit*/ 2) {
				attr_dev(img, "alt", /*nomProduit*/ ctx[1]);
			}

			if (!current || dirty & /*idProduit*/ 8) {
				attr_dev(button, "data-item-id", /*idProduit*/ ctx[3]);
			}

			if (!current || dirty & /*prixProduit*/ 4) {
				attr_dev(button, "data-item-price", /*prixProduit*/ ctx[2]);
			}

			if (!current || dirty & /*itemGategorie*/ 64) {
				attr_dev(button, "data-item-categories", /*itemGategorie*/ ctx[6]);
			}

			if (!current || dirty & /*imgProduit*/ 1) {
				attr_dev(button, "data-item-image", /*imgProduit*/ ctx[0]);
			}

			if (!current || dirty & /*nomProduit*/ 2) {
				attr_dev(button, "data-item-name", /*nomProduit*/ ctx[1]);
			}

			if (!current || dirty & /*custom1*/ 128) {
				attr_dev(button, "data-item-custom1-name", /*custom1*/ ctx[7]);
			}

			if (!current || dirty & /*options1*/ 256) {
				attr_dev(button, "data-item-custom1-options", /*options1*/ ctx[8]);
			}

			if (!current || dirty & /*custom2*/ 512) {
				attr_dev(button, "data-item-custom2-name", /*custom2*/ ctx[9]);
			}

			if (!current || dirty & /*options2*/ 1024) {
				attr_dev(button, "data-item-custom2-options", /*options2*/ ctx[10]);
			}

			if (!current || dirty & /*custom3*/ 2048) {
				attr_dev(button, "data-item-custom3-name", /*custom3*/ ctx[11]);
			}

			if (!current || dirty & /*options3*/ 4096) {
				attr_dev(button, "data-item-custom3-options", /*options3*/ ctx[12]);
			}

			if (/*toggle*/ ctx[13]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*toggle*/ 8192) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block$1(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(article, null);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(article);
			if (if_block) if_block.d();
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Produit", slots, []);
	let { imgProduit } = $$props;
	let { nomProduit } = $$props;
	let { prixProduit } = $$props;
	let { idProduit } = $$props;
	let { imgModalProduit } = $$props;
	let { descriptionProduit } = $$props;
	let { itemGategorie } = $$props;
	let { custom1 } = $$props;
	let { options1 } = $$props;
	let { custom2 } = $$props;
	let { options2 } = $$props;
	let { custom3 } = $$props;
	let { options3 } = $$props;
	let selected = 0;
	let toggle = false;

	function toggleFunc() {
		$$invalidate(13, toggle = !toggle);
	}

	const writable_props = [
		"imgProduit",
		"nomProduit",
		"prixProduit",
		"idProduit",
		"imgModalProduit",
		"descriptionProduit",
		"itemGategorie",
		"custom1",
		"options1",
		"custom2",
		"options2",
		"custom3",
		"options3"
	];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Produit> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("imgProduit" in $$props) $$invalidate(0, imgProduit = $$props.imgProduit);
		if ("nomProduit" in $$props) $$invalidate(1, nomProduit = $$props.nomProduit);
		if ("prixProduit" in $$props) $$invalidate(2, prixProduit = $$props.prixProduit);
		if ("idProduit" in $$props) $$invalidate(3, idProduit = $$props.idProduit);
		if ("imgModalProduit" in $$props) $$invalidate(4, imgModalProduit = $$props.imgModalProduit);
		if ("descriptionProduit" in $$props) $$invalidate(5, descriptionProduit = $$props.descriptionProduit);
		if ("itemGategorie" in $$props) $$invalidate(6, itemGategorie = $$props.itemGategorie);
		if ("custom1" in $$props) $$invalidate(7, custom1 = $$props.custom1);
		if ("options1" in $$props) $$invalidate(8, options1 = $$props.options1);
		if ("custom2" in $$props) $$invalidate(9, custom2 = $$props.custom2);
		if ("options2" in $$props) $$invalidate(10, options2 = $$props.options2);
		if ("custom3" in $$props) $$invalidate(11, custom3 = $$props.custom3);
		if ("options3" in $$props) $$invalidate(12, options3 = $$props.options3);
	};

	$$self.$capture_state = () => ({
		Modal,
		imgProduit,
		nomProduit,
		prixProduit,
		idProduit,
		imgModalProduit,
		descriptionProduit,
		itemGategorie,
		custom1,
		options1,
		custom2,
		options2,
		custom3,
		options3,
		selected,
		toggle,
		toggleFunc
	});

	$$self.$inject_state = $$props => {
		if ("imgProduit" in $$props) $$invalidate(0, imgProduit = $$props.imgProduit);
		if ("nomProduit" in $$props) $$invalidate(1, nomProduit = $$props.nomProduit);
		if ("prixProduit" in $$props) $$invalidate(2, prixProduit = $$props.prixProduit);
		if ("idProduit" in $$props) $$invalidate(3, idProduit = $$props.idProduit);
		if ("imgModalProduit" in $$props) $$invalidate(4, imgModalProduit = $$props.imgModalProduit);
		if ("descriptionProduit" in $$props) $$invalidate(5, descriptionProduit = $$props.descriptionProduit);
		if ("itemGategorie" in $$props) $$invalidate(6, itemGategorie = $$props.itemGategorie);
		if ("custom1" in $$props) $$invalidate(7, custom1 = $$props.custom1);
		if ("options1" in $$props) $$invalidate(8, options1 = $$props.options1);
		if ("custom2" in $$props) $$invalidate(9, custom2 = $$props.custom2);
		if ("options2" in $$props) $$invalidate(10, options2 = $$props.options2);
		if ("custom3" in $$props) $$invalidate(11, custom3 = $$props.custom3);
		if ("options3" in $$props) $$invalidate(12, options3 = $$props.options3);
		if ("selected" in $$props) selected = $$props.selected;
		if ("toggle" in $$props) $$invalidate(13, toggle = $$props.toggle);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		imgProduit,
		nomProduit,
		prixProduit,
		idProduit,
		imgModalProduit,
		descriptionProduit,
		itemGategorie,
		custom1,
		options1,
		custom2,
		options2,
		custom3,
		options3,
		toggle,
		toggleFunc
	];
}

class Produit extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance$1, create_fragment$1, safe_not_equal, {
			imgProduit: 0,
			nomProduit: 1,
			prixProduit: 2,
			idProduit: 3,
			imgModalProduit: 4,
			descriptionProduit: 5,
			itemGategorie: 6,
			custom1: 7,
			options1: 8,
			custom2: 9,
			options2: 10,
			custom3: 11,
			options3: 12
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Produit",
			options,
			id: create_fragment$1.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*imgProduit*/ ctx[0] === undefined && !("imgProduit" in props)) {
			console.warn("<Produit> was created without expected prop 'imgProduit'");
		}

		if (/*nomProduit*/ ctx[1] === undefined && !("nomProduit" in props)) {
			console.warn("<Produit> was created without expected prop 'nomProduit'");
		}

		if (/*prixProduit*/ ctx[2] === undefined && !("prixProduit" in props)) {
			console.warn("<Produit> was created without expected prop 'prixProduit'");
		}

		if (/*idProduit*/ ctx[3] === undefined && !("idProduit" in props)) {
			console.warn("<Produit> was created without expected prop 'idProduit'");
		}

		if (/*imgModalProduit*/ ctx[4] === undefined && !("imgModalProduit" in props)) {
			console.warn("<Produit> was created without expected prop 'imgModalProduit'");
		}

		if (/*descriptionProduit*/ ctx[5] === undefined && !("descriptionProduit" in props)) {
			console.warn("<Produit> was created without expected prop 'descriptionProduit'");
		}

		if (/*itemGategorie*/ ctx[6] === undefined && !("itemGategorie" in props)) {
			console.warn("<Produit> was created without expected prop 'itemGategorie'");
		}

		if (/*custom1*/ ctx[7] === undefined && !("custom1" in props)) {
			console.warn("<Produit> was created without expected prop 'custom1'");
		}

		if (/*options1*/ ctx[8] === undefined && !("options1" in props)) {
			console.warn("<Produit> was created without expected prop 'options1'");
		}

		if (/*custom2*/ ctx[9] === undefined && !("custom2" in props)) {
			console.warn("<Produit> was created without expected prop 'custom2'");
		}

		if (/*options2*/ ctx[10] === undefined && !("options2" in props)) {
			console.warn("<Produit> was created without expected prop 'options2'");
		}

		if (/*custom3*/ ctx[11] === undefined && !("custom3" in props)) {
			console.warn("<Produit> was created without expected prop 'custom3'");
		}

		if (/*options3*/ ctx[12] === undefined && !("options3" in props)) {
			console.warn("<Produit> was created without expected prop 'options3'");
		}
	}

	get imgProduit() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set imgProduit(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get nomProduit() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set nomProduit(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get prixProduit() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set prixProduit(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get idProduit() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set idProduit(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get imgModalProduit() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set imgModalProduit(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get descriptionProduit() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set descriptionProduit(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get itemGategorie() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set itemGategorie(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get custom1() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set custom1(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get options1() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set options1(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get custom2() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set custom2(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get options2() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set options2(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get custom3() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set custom3(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get options3() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set options3(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/routes/shop/index.svelte generated by Svelte v3.35.0 */
const file = "src/routes/shop/index.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	return child_ctx;
}

function get_each_context_2(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[4] = list[i];
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[4] = list[i];
	return child_ctx;
}

// (90:10) {:else}
function create_else_block_1(ctx) {
	let span;

	const block = {
		c: function create() {
			span = element("span");
			this.h();
		},
		l: function claim(nodes) {
			span = claim_element(nodes, "SPAN", {});
			children(span).forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(span, file, 90, 12, 2843);
		},
		m: function mount(target, anchor) {
			insert_dev(target, span, anchor);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(span);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block_1.name,
		type: "else",
		source: "(90:10) {:else}",
		ctx
	});

	return block;
}

// (56:8) {#if produit.produits.length > 0}
function create_if_block(ctx) {
	let current_block_type_index;
	let if_block;
	let if_block_anchor;
	let current;
	const if_block_creators = [create_if_block_1, create_else_block];
	const if_blocks = [];

	function select_block_type_1(ctx, dirty) {
		if (/*produit*/ ctx[1].nom === "T-SHIRTS") return 0;
		return 1;
	}

	current_block_type_index = select_block_type_1(ctx);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	const block = {
		c: function create() {
			if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			if_blocks[current_block_type_index].m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type_1(ctx);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				group_outros();

				transition_out(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				check_outros();
				if_block = if_blocks[current_block_type_index];

				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				} else {
					if_block.p(ctx, dirty);
				}

				transition_in(if_block, 1);
				if_block.m(if_block_anchor.parentNode, if_block_anchor);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if_blocks[current_block_type_index].d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(56:8) {#if produit.produits.length > 0}",
		ctx
	});

	return block;
}

// (68:10) {:else}
function create_else_block(ctx) {
	let h2;
	let t0_value = /*produit*/ ctx[1].nom + "";
	let t0;
	let t1;
	let div;
	let t2;
	let current;
	let each_value_2 = /*produit*/ ctx[1].produits;
	validate_each_argument(each_value_2);
	let each_blocks = [];

	for (let i = 0; i < each_value_2.length; i += 1) {
		each_blocks[i] = create_each_block_2(get_each_context_2(ctx, each_value_2, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			h2 = element("h2");
			t0 = text(t0_value);
			t1 = space();
			div = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t2 = space();
			this.h();
		},
		l: function claim(nodes) {
			h2 = claim_element(nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, t0_value);
			h2_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			t2 = claim_space(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h2, "class", "svelte-37oz9");
			add_location(h2, file, 68, 10, 1929);
			attr_dev(div, "class", "container svelte-37oz9");
			add_location(div, file, 69, 12, 1964);
		},
		m: function mount(target, anchor) {
			insert_dev(target, h2, anchor);
			append_dev(h2, t0);
			insert_dev(target, t1, anchor);
			insert_dev(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			append_dev(div, t2);
			current = true;
		},
		p: function update(ctx, dirty) {
			if ((!current || dirty & /*article*/ 1) && t0_value !== (t0_value = /*produit*/ ctx[1].nom + "")) set_data_dev(t0, t0_value);

			if (dirty & /*article, urlpApi*/ 1) {
				each_value_2 = /*produit*/ ctx[1].produits;
				validate_each_argument(each_value_2);
				let i;

				for (i = 0; i < each_value_2.length; i += 1) {
					const child_ctx = get_each_context_2(ctx, each_value_2, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block_2(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(div, t2);
					}
				}

				group_outros();

				for (i = each_value_2.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value_2.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(h2);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(div);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(68:10) {:else}",
		ctx
	});

	return block;
}

// (57:10) {#if produit.nom === "T-SHIRTS"}
function create_if_block_1(ctx) {
	let each_1_anchor;
	let current;
	let each_value_1 = /*produit*/ ctx[1].produits;
	validate_each_argument(each_value_1);
	let each_blocks = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = empty();
		},
		l: function claim(nodes) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(nodes);
			}

			each_1_anchor = empty();
		},
		m: function mount(target, anchor) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			insert_dev(target, each_1_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (dirty & /*urlpApi, article*/ 1) {
				each_value_1 = /*produit*/ ctx[1].produits;
				validate_each_argument(each_value_1);
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block_1(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
					}
				}

				group_outros();

				for (i = each_value_1.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value_1.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			destroy_each(each_blocks, detaching);
			if (detaching) detach_dev(each_1_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(57:10) {#if produit.nom === \\\"T-SHIRTS\\\"}",
		ctx
	});

	return block;
}

// (71:14) {#each produit.produits as product}
function create_each_block_2(ctx) {
	let produit;
	let current;

	produit = new Produit({
			props: {
				itemGategorie: /*produit*/ ctx[1].nom,
				imgProduit: urlpApi + /*product*/ ctx[4].image.url,
				nomProduit: /*product*/ ctx[4].nom,
				descriptionProduit: /*product*/ ctx[4].description,
				prixProduit: /*product*/ ctx[4].prix,
				idProduit: /*product*/ ctx[4].id,
				imgModalProduit: urlpApi + /*product*/ ctx[4].image.url,
				custom1: /*product*/ ctx[4].nameCustomOption1,
				options1: /*product*/ ctx[4].customOption1,
				custom2: /*product*/ ctx[4].nameCustomOption2,
				options2: /*product*/ ctx[4].customOption2,
				custom3: /*product*/ ctx[4].nameCustomOption3,
				options3: /*product*/ ctx[4].customOption3
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(produit.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(produit.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(produit, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const produit_changes = {};
			if (dirty & /*article*/ 1) produit_changes.itemGategorie = /*produit*/ ctx[1].nom;
			if (dirty & /*article*/ 1) produit_changes.imgProduit = urlpApi + /*product*/ ctx[4].image.url;
			if (dirty & /*article*/ 1) produit_changes.nomProduit = /*product*/ ctx[4].nom;
			if (dirty & /*article*/ 1) produit_changes.descriptionProduit = /*product*/ ctx[4].description;
			if (dirty & /*article*/ 1) produit_changes.prixProduit = /*product*/ ctx[4].prix;
			if (dirty & /*article*/ 1) produit_changes.idProduit = /*product*/ ctx[4].id;
			if (dirty & /*article*/ 1) produit_changes.imgModalProduit = urlpApi + /*product*/ ctx[4].image.url;
			if (dirty & /*article*/ 1) produit_changes.custom1 = /*product*/ ctx[4].nameCustomOption1;
			if (dirty & /*article*/ 1) produit_changes.options1 = /*product*/ ctx[4].customOption1;
			if (dirty & /*article*/ 1) produit_changes.custom2 = /*product*/ ctx[4].nameCustomOption2;
			if (dirty & /*article*/ 1) produit_changes.options2 = /*product*/ ctx[4].customOption2;
			if (dirty & /*article*/ 1) produit_changes.custom3 = /*product*/ ctx[4].nameCustomOption3;
			if (dirty & /*article*/ 1) produit_changes.options3 = /*product*/ ctx[4].customOption3;
			produit.$set(produit_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(produit.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(produit.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(produit, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block_2.name,
		type: "each",
		source: "(71:14) {#each produit.produits as product}",
		ctx
	});

	return block;
}

// (58:10) {#each produit.produits as product}
function create_each_block_1(ctx) {
	let produittshirt;
	let current;

	produittshirt = new Produit({
			props: {
				imgProduit: urlpApi + /*product*/ ctx[4].image.url,
				nomProduit: /*product*/ ctx[4].nom,
				descriptionProduit: /*product*/ ctx[4].description,
				prixProduit: /*product*/ ctx[4].prix,
				idProduit: /*product*/ ctx[4].id,
				imgModalProduit: urlpApi + /*product*/ ctx[4].image.url
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(produittshirt.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(produittshirt.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(produittshirt, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const produittshirt_changes = {};
			if (dirty & /*article*/ 1) produittshirt_changes.imgProduit = urlpApi + /*product*/ ctx[4].image.url;
			if (dirty & /*article*/ 1) produittshirt_changes.nomProduit = /*product*/ ctx[4].nom;
			if (dirty & /*article*/ 1) produittshirt_changes.descriptionProduit = /*product*/ ctx[4].description;
			if (dirty & /*article*/ 1) produittshirt_changes.prixProduit = /*product*/ ctx[4].prix;
			if (dirty & /*article*/ 1) produittshirt_changes.idProduit = /*product*/ ctx[4].id;
			if (dirty & /*article*/ 1) produittshirt_changes.imgModalProduit = urlpApi + /*product*/ ctx[4].image.url;
			produittshirt.$set(produittshirt_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(produittshirt.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(produittshirt.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(produittshirt, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block_1.name,
		type: "each",
		source: "(58:10) {#each produit.produits as product}",
		ctx
	});

	return block;
}

// (55:6) {#each article as produit}
function create_each_block(ctx) {
	let current_block_type_index;
	let if_block;
	let if_block_anchor;
	let current;
	const if_block_creators = [create_if_block, create_else_block_1];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (/*produit*/ ctx[1].produits.length > 0) return 0;
		return 1;
	}

	current_block_type_index = select_block_type(ctx);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	const block = {
		c: function create() {
			if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			if_blocks[current_block_type_index].m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(ctx);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				group_outros();

				transition_out(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				check_outros();
				if_block = if_blocks[current_block_type_index];

				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				} else {
					if_block.p(ctx, dirty);
				}

				transition_in(if_block, 1);
				if_block.m(if_block_anchor.parentNode, if_block_anchor);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if_blocks[current_block_type_index].d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(55:6) {#each article as produit}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let svelteseo;
	let t0;
	let div;
	let h1;
	let t1;
	let t2;
	let current;

	svelteseo = new SvelteSeo({
			props: {
				description: "Boutique du collectif Blast. Trouvez votre impression 3D préférés ou des reproductions d'oeuvres en poster \n  ou print des oeuvres de Kalouf, Romain Lardanchet et Fabe Collage",
				title: "Boutique du collectif Blast où vous pouvez achetez des oeuvres originales et des reproductions"
			},
			$$inline: true
		});

	let each_value = /*article*/ ctx[0];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			create_component(svelteseo.$$.fragment);
			t0 = space();
			div = element("div");
			h1 = element("h1");
			t1 = text("BLAST SHOP");
			t2 = space();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			claim_component(svelteseo.$$.fragment, nodes);
			t0 = claim_space(nodes);
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			h1 = claim_element(div_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "BLAST SHOP");
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(div_nodes);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h1, "class", "svelte-37oz9");
			add_location(h1, file, 53, 4, 1379);
			attr_dev(div, "class", "all svelte-37oz9");
			add_location(div, file, 52, 2, 1357);
		},
		m: function mount(target, anchor) {
			mount_component(svelteseo, target, anchor);
			insert_dev(target, t0, anchor);
			insert_dev(target, div, anchor);
			append_dev(div, h1);
			append_dev(h1, t1);
			append_dev(div, t2);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*article, urlpApi*/ 1) {
				each_value = /*article*/ ctx[0];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(div, null);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(svelteseo.$$.fragment, local);

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			transition_out(svelteseo.$$.fragment, local);
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(svelteseo, detaching);
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const produitsQuery = gql`
    query produit {
      categories(sort: "ordre") {
        nom
        ordre
        produits {
          id
          nom
          description
          prix
          nameCustomOption1
          customOption1
          nameCustomOption2
          customOption2
          nameCustomOption3
          customOption3
          image {
            url
          }
        }
      }
    }
  `;

async function preload() {
	const client = new DefaultClient({
			uri: "https://www.grldfaure.xyz/graphql",
			fetch: this.fetch
		});

	const results = await client.query({ query: produitsQuery });
	return { article: results.data.categories };
}

let urlpApi = "https://www.grldfaure.xyz";

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Shop", slots, []);
	let { article } = $$props;
	const writable_props = ["article"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Shop> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("article" in $$props) $$invalidate(0, article = $$props.article);
	};

	$$self.$capture_state = () => ({
		ApolloClient: DefaultClient,
		gql,
		Produit,
		ProduitTshirt: Produit,
		SvelteSeo,
		produitsQuery,
		preload,
		urlpApi,
		article
	});

	$$self.$inject_state = $$props => {
		if ("article" in $$props) $$invalidate(0, article = $$props.article);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [article];
}

class Shop extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { article: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Shop",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*article*/ ctx[0] === undefined && !("article" in props)) {
			console.warn("<Shop> was created without expected prop 'article'");
		}
	}

	get article() {
		throw new Error("<Shop>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set article(value) {
		throw new Error("<Shop>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Shop;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
