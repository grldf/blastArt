import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, L as createEventDispatcher, e as element, a as space, t as text, c as claim_element, b as children, g as detach_dev, h as claim_space, f as claim_text, j as attr_dev, k as add_location, m as insert_dev, n as append_dev, B as listen_dev, p as noop, E as run_all, r as create_component, u as claim_component, w as mount_component, x as transition_in, y as transition_out, z as destroy_component, o as set_data_dev, F as group_outros, C as check_outros, q as validate_each_argument, J as empty, A as query_selector_all, D as destroy_each } from './client.09eb69ff.js';
import { g as gql, D as DefaultClient } from './bundle.esm.ce987c6b.js';

/* src/components/Modal.svelte generated by Svelte v3.35.0 */
const file$2 = "src/components/Modal.svelte";

function create_fragment$2(ctx) {
	let div0;
	let t0;
	let div1;
	let button;
	let t1;
	let t2;
	let img;
	let img_src_value;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			div0 = element("div");
			t0 = space();
			div1 = element("div");
			button = element("button");
			t1 = text("Close");
			t2 = space();
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			div0 = claim_element(nodes, "DIV", { class: true });
			children(div0).forEach(detach_dev);
			t0 = claim_space(nodes);
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			button = claim_element(div1_nodes, "BUTTON", {});
			var button_nodes = children(button);
			t1 = claim_text(button_nodes, "Close");
			button_nodes.forEach(detach_dev);
			t2 = claim_space(div1_nodes);
			img = claim_element(div1_nodes, "IMG", { src: true, alt: true, class: true });
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "overlay svelte-6o25t");
			add_location(div0, file$2, 10, 0, 184);
			add_location(button, file$2, 12, 4, 257);
			if (img.src !== (img_src_value = /*imgModal*/ ctx[0])) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "test");
			attr_dev(img, "class", "svelte-6o25t");
			add_location(img, file$2, 13, 4, 306);
			attr_dev(div1, "class", "card svelte-6o25t");
			add_location(div1, file$2, 11, 0, 234);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div0, anchor);
			insert_dev(target, t0, anchor);
			insert_dev(target, div1, anchor);
			append_dev(div1, button);
			append_dev(button, t1);
			append_dev(div1, t2);
			append_dev(div1, img);

			if (!mounted) {
				dispose = [
					listen_dev(div0, "click", /*closeModal*/ ctx[1], false, false, false),
					listen_dev(button, "click", /*closeModal*/ ctx[1], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*imgModal*/ 1 && img.src !== (img_src_value = /*imgModal*/ ctx[0])) {
				attr_dev(img, "src", img_src_value);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div0);
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div1);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Modal", slots, []);
	let { imgModal } = $$props;
	const dispatch = createEventDispatcher();

	function closeModal() {
		dispatch("fermeture");
	}

	const writable_props = ["imgModal"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Modal> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("imgModal" in $$props) $$invalidate(0, imgModal = $$props.imgModal);
	};

	$$self.$capture_state = () => ({
		createEventDispatcher,
		imgModal,
		dispatch,
		closeModal
	});

	$$self.$inject_state = $$props => {
		if ("imgModal" in $$props) $$invalidate(0, imgModal = $$props.imgModal);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [imgModal, closeModal];
}

class Modal extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, { imgModal: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Modal",
			options,
			id: create_fragment$2.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*imgModal*/ ctx[0] === undefined && !("imgModal" in props)) {
			console.warn("<Modal> was created without expected prop 'imgModal'");
		}
	}

	get imgModal() {
		throw new Error("<Modal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set imgModal(value) {
		throw new Error("<Modal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/Produit.svelte generated by Svelte v3.35.0 */
const file$1 = "src/components/Produit.svelte";

// (36:4) {#if toggle}
function create_if_block$1(ctx) {
	let modal;
	let current;

	modal = new Modal({
			props: { imgModal: /*imgModalProduit*/ ctx[4] },
			$$inline: true
		});

	modal.$on("fermeture", /*toggleFunc*/ ctx[7]);

	const block = {
		c: function create() {
			create_component(modal.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(modal.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(modal, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const modal_changes = {};
			if (dirty & /*imgModalProduit*/ 16) modal_changes.imgModal = /*imgModalProduit*/ ctx[4];
			modal.$set(modal_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(modal.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(modal.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(modal, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$1.name,
		type: "if",
		source: "(36:4) {#if toggle}",
		ctx
	});

	return block;
}

function create_fragment$1(ctx) {
	let article;
	let h2;
	let t0;
	let t1;
	let p;
	let t2;
	let t3;
	let img;
	let img_src_value;
	let t4;
	let div;
	let button0;
	let t5;
	let t6;
	let button1;
	let t7;
	let t8;
	let current;
	let mounted;
	let dispose;
	let if_block = /*toggle*/ ctx[6] && create_if_block$1(ctx);

	const block = {
		c: function create() {
			article = element("article");
			h2 = element("h2");
			t0 = text(/*nomProduit*/ ctx[1]);
			t1 = space();
			p = element("p");
			t2 = text(/*descriptionProduit*/ ctx[5]);
			t3 = space();
			img = element("img");
			t4 = space();
			div = element("div");
			button0 = element("button");
			t5 = text("Voir en Grand");
			t6 = space();
			button1 = element("button");
			t7 = text("Ajouter au Panier");
			t8 = space();
			if (if_block) if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			article = claim_element(nodes, "ARTICLE", { class: true });
			var article_nodes = children(article);
			h2 = claim_element(article_nodes, "H2", {});
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, /*nomProduit*/ ctx[1]);
			h2_nodes.forEach(detach_dev);
			t1 = claim_space(article_nodes);
			p = claim_element(article_nodes, "P", {});
			var p_nodes = children(p);
			t2 = claim_text(p_nodes, /*descriptionProduit*/ ctx[5]);
			p_nodes.forEach(detach_dev);
			t3 = claim_space(article_nodes);
			img = claim_element(article_nodes, "IMG", { src: true, alt: true, class: true });
			t4 = claim_space(article_nodes);
			div = claim_element(article_nodes, "DIV", { class: true });
			var div_nodes = children(div);
			button0 = claim_element(div_nodes, "BUTTON", { class: true });
			var button0_nodes = children(button0);
			t5 = claim_text(button0_nodes, "Voir en Grand");
			button0_nodes.forEach(detach_dev);
			t6 = claim_space(div_nodes);

			button1 = claim_element(div_nodes, "BUTTON", {
				class: true,
				"data-item-id": true,
				"data-item-price": true,
				"data-item-url": true,
				"data-item-image": true,
				"data-item-name": true
			});

			var button1_nodes = children(button1);
			t7 = claim_text(button1_nodes, "Ajouter au Panier");
			button1_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			t8 = claim_space(article_nodes);
			if (if_block) if_block.l(article_nodes);
			article_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h2, file$1, 17, 2, 338);
			add_location(p, file$1, 18, 2, 362);
			if (img.src !== (img_src_value = /*imgProduit*/ ctx[0])) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "test");
			attr_dev(img, "class", "svelte-172p7bk");
			add_location(img, file$1, 21, 2, 396);
			attr_dev(button0, "class", "svelte-172p7bk");
			add_location(button0, file$1, 23, 2, 455);
			attr_dev(button1, "class", "snipcart-add-item svelte-172p7bk");
			attr_dev(button1, "data-item-id", /*idProduit*/ ctx[3]);
			attr_dev(button1, "data-item-price", /*prixProduit*/ ctx[2]);
			attr_dev(button1, "data-item-url", "/");
			attr_dev(button1, "data-item-image", /*imgProduit*/ ctx[0]);
			attr_dev(button1, "data-item-name", /*nomProduit*/ ctx[1]);
			add_location(button1, file$1, 24, 2, 510);
			attr_dev(div, "class", "btns svelte-172p7bk");
			add_location(div, file$1, 22, 2, 434);
			attr_dev(article, "class", "svelte-172p7bk");
			add_location(article, file$1, 16, 0, 326);
		},
		m: function mount(target, anchor) {
			insert_dev(target, article, anchor);
			append_dev(article, h2);
			append_dev(h2, t0);
			append_dev(article, t1);
			append_dev(article, p);
			append_dev(p, t2);
			append_dev(article, t3);
			append_dev(article, img);
			append_dev(article, t4);
			append_dev(article, div);
			append_dev(div, button0);
			append_dev(button0, t5);
			append_dev(div, t6);
			append_dev(div, button1);
			append_dev(button1, t7);
			append_dev(article, t8);
			if (if_block) if_block.m(article, null);
			current = true;

			if (!mounted) {
				dispose = listen_dev(button0, "click", /*toggleFunc*/ ctx[7], false, false, false);
				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (!current || dirty & /*nomProduit*/ 2) set_data_dev(t0, /*nomProduit*/ ctx[1]);
			if (!current || dirty & /*descriptionProduit*/ 32) set_data_dev(t2, /*descriptionProduit*/ ctx[5]);

			if (!current || dirty & /*imgProduit*/ 1 && img.src !== (img_src_value = /*imgProduit*/ ctx[0])) {
				attr_dev(img, "src", img_src_value);
			}

			if (!current || dirty & /*idProduit*/ 8) {
				attr_dev(button1, "data-item-id", /*idProduit*/ ctx[3]);
			}

			if (!current || dirty & /*prixProduit*/ 4) {
				attr_dev(button1, "data-item-price", /*prixProduit*/ ctx[2]);
			}

			if (!current || dirty & /*imgProduit*/ 1) {
				attr_dev(button1, "data-item-image", /*imgProduit*/ ctx[0]);
			}

			if (!current || dirty & /*nomProduit*/ 2) {
				attr_dev(button1, "data-item-name", /*nomProduit*/ ctx[1]);
			}

			if (/*toggle*/ ctx[6]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*toggle*/ 64) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block$1(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(article, null);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(article);
			if (if_block) if_block.d();
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Produit", slots, []);
	let { imgProduit } = $$props;
	let { nomProduit } = $$props;
	let { prixProduit } = $$props;
	let { idProduit } = $$props;
	let { imgModalProduit } = $$props;
	let { titreModalProduit } = $$props;
	let { descriptionProduit } = $$props;
	let toggle = false;

	function toggleFunc() {
		$$invalidate(6, toggle = !toggle);
	}

	const writable_props = [
		"imgProduit",
		"nomProduit",
		"prixProduit",
		"idProduit",
		"imgModalProduit",
		"titreModalProduit",
		"descriptionProduit"
	];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Produit> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("imgProduit" in $$props) $$invalidate(0, imgProduit = $$props.imgProduit);
		if ("nomProduit" in $$props) $$invalidate(1, nomProduit = $$props.nomProduit);
		if ("prixProduit" in $$props) $$invalidate(2, prixProduit = $$props.prixProduit);
		if ("idProduit" in $$props) $$invalidate(3, idProduit = $$props.idProduit);
		if ("imgModalProduit" in $$props) $$invalidate(4, imgModalProduit = $$props.imgModalProduit);
		if ("titreModalProduit" in $$props) $$invalidate(8, titreModalProduit = $$props.titreModalProduit);
		if ("descriptionProduit" in $$props) $$invalidate(5, descriptionProduit = $$props.descriptionProduit);
	};

	$$self.$capture_state = () => ({
		Modal,
		imgProduit,
		nomProduit,
		prixProduit,
		idProduit,
		imgModalProduit,
		titreModalProduit,
		descriptionProduit,
		toggle,
		toggleFunc
	});

	$$self.$inject_state = $$props => {
		if ("imgProduit" in $$props) $$invalidate(0, imgProduit = $$props.imgProduit);
		if ("nomProduit" in $$props) $$invalidate(1, nomProduit = $$props.nomProduit);
		if ("prixProduit" in $$props) $$invalidate(2, prixProduit = $$props.prixProduit);
		if ("idProduit" in $$props) $$invalidate(3, idProduit = $$props.idProduit);
		if ("imgModalProduit" in $$props) $$invalidate(4, imgModalProduit = $$props.imgModalProduit);
		if ("titreModalProduit" in $$props) $$invalidate(8, titreModalProduit = $$props.titreModalProduit);
		if ("descriptionProduit" in $$props) $$invalidate(5, descriptionProduit = $$props.descriptionProduit);
		if ("toggle" in $$props) $$invalidate(6, toggle = $$props.toggle);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		imgProduit,
		nomProduit,
		prixProduit,
		idProduit,
		imgModalProduit,
		descriptionProduit,
		toggle,
		toggleFunc,
		titreModalProduit
	];
}

class Produit extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance$1, create_fragment$1, safe_not_equal, {
			imgProduit: 0,
			nomProduit: 1,
			prixProduit: 2,
			idProduit: 3,
			imgModalProduit: 4,
			titreModalProduit: 8,
			descriptionProduit: 5
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Produit",
			options,
			id: create_fragment$1.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*imgProduit*/ ctx[0] === undefined && !("imgProduit" in props)) {
			console.warn("<Produit> was created without expected prop 'imgProduit'");
		}

		if (/*nomProduit*/ ctx[1] === undefined && !("nomProduit" in props)) {
			console.warn("<Produit> was created without expected prop 'nomProduit'");
		}

		if (/*prixProduit*/ ctx[2] === undefined && !("prixProduit" in props)) {
			console.warn("<Produit> was created without expected prop 'prixProduit'");
		}

		if (/*idProduit*/ ctx[3] === undefined && !("idProduit" in props)) {
			console.warn("<Produit> was created without expected prop 'idProduit'");
		}

		if (/*imgModalProduit*/ ctx[4] === undefined && !("imgModalProduit" in props)) {
			console.warn("<Produit> was created without expected prop 'imgModalProduit'");
		}

		if (/*titreModalProduit*/ ctx[8] === undefined && !("titreModalProduit" in props)) {
			console.warn("<Produit> was created without expected prop 'titreModalProduit'");
		}

		if (/*descriptionProduit*/ ctx[5] === undefined && !("descriptionProduit" in props)) {
			console.warn("<Produit> was created without expected prop 'descriptionProduit'");
		}
	}

	get imgProduit() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set imgProduit(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get nomProduit() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set nomProduit(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get prixProduit() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set prixProduit(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get idProduit() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set idProduit(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get imgModalProduit() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set imgModalProduit(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get titreModalProduit() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set titreModalProduit(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get descriptionProduit() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set descriptionProduit(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/routes/Shop/index.svelte generated by Svelte v3.35.0 */
const file = "src/routes/Shop/index.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[4] = list[i];
	return child_ctx;
}

// (63:2) {:else}
function create_else_block(ctx) {
	let span;

	const block = {
		c: function create() {
			span = element("span");
			this.h();
		},
		l: function claim(nodes) {
			span = claim_element(nodes, "SPAN", {});
			children(span).forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(span, file, 63, 2, 1368);
		},
		m: function mount(target, anchor) {
			insert_dev(target, span, anchor);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(span);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(63:2) {:else}",
		ctx
	});

	return block;
}

// (46:2) {#if produit.produits.length >0}
function create_if_block(ctx) {
	let h2;
	let t0_value = /*produit*/ ctx[1].nom + "";
	let t0;
	let t1;
	let div;
	let t2;
	let current;
	let each_value_1 = /*produit*/ ctx[1].produits;
	validate_each_argument(each_value_1);
	let each_blocks = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			h2 = element("h2");
			t0 = text(t0_value);
			t1 = space();
			div = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t2 = space();
			this.h();
		},
		l: function claim(nodes) {
			h2 = claim_element(nodes, "H2", {});
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, t0_value);
			h2_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			t2 = claim_space(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h2, file, 46, 2, 956);
			attr_dev(div, "class", "container svelte-1v4dxhd");
			add_location(div, file, 48, 2, 982);
		},
		m: function mount(target, anchor) {
			insert_dev(target, h2, anchor);
			append_dev(h2, t0);
			insert_dev(target, t1, anchor);
			insert_dev(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			append_dev(div, t2);
			current = true;
		},
		p: function update(ctx, dirty) {
			if ((!current || dirty & /*article*/ 1) && t0_value !== (t0_value = /*produit*/ ctx[1].nom + "")) set_data_dev(t0, t0_value);

			if (dirty & /*urlpApi, article*/ 1) {
				each_value_1 = /*produit*/ ctx[1].produits;
				validate_each_argument(each_value_1);
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block_1(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(div, t2);
					}
				}

				group_outros();

				for (i = each_value_1.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value_1.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(h2);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(div);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(46:2) {#if produit.produits.length >0}",
		ctx
	});

	return block;
}

// (50:4) {#each produit.produits as product}
function create_each_block_1(ctx) {
	let produit;
	let current;

	produit = new Produit({
			props: {
				imgProduit: urlpApi + /*product*/ ctx[4].image.url,
				nomProduit: /*product*/ ctx[4].nom,
				descriptionProduit: /*product*/ ctx[4].description,
				prixProduit: /*product*/ ctx[4].prix,
				idProduit: /*product*/ ctx[4].id,
				imgModalProduit: urlpApi + /*product*/ ctx[4].image.url,
				titreModalProduit: /*product*/ ctx[4].nom
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(produit.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(produit.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(produit, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const produit_changes = {};
			if (dirty & /*article*/ 1) produit_changes.imgProduit = urlpApi + /*product*/ ctx[4].image.url;
			if (dirty & /*article*/ 1) produit_changes.nomProduit = /*product*/ ctx[4].nom;
			if (dirty & /*article*/ 1) produit_changes.descriptionProduit = /*product*/ ctx[4].description;
			if (dirty & /*article*/ 1) produit_changes.prixProduit = /*product*/ ctx[4].prix;
			if (dirty & /*article*/ 1) produit_changes.idProduit = /*product*/ ctx[4].id;
			if (dirty & /*article*/ 1) produit_changes.imgModalProduit = urlpApi + /*product*/ ctx[4].image.url;
			if (dirty & /*article*/ 1) produit_changes.titreModalProduit = /*product*/ ctx[4].nom;
			produit.$set(produit_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(produit.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(produit.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(produit, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block_1.name,
		type: "each",
		source: "(50:4) {#each produit.produits as product}",
		ctx
	});

	return block;
}

// (45:2) {#each article as produit}
function create_each_block(ctx) {
	let current_block_type_index;
	let if_block;
	let if_block_anchor;
	let current;
	const if_block_creators = [create_if_block, create_else_block];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (/*produit*/ ctx[1].produits.length > 0) return 0;
		return 1;
	}

	current_block_type_index = select_block_type(ctx);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	const block = {
		c: function create() {
			if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			if_blocks[current_block_type_index].m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(ctx);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				group_outros();

				transition_out(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				check_outros();
				if_block = if_blocks[current_block_type_index];

				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				} else {
					if_block.p(ctx, dirty);
				}

				transition_in(if_block, 1);
				if_block.m(if_block_anchor.parentNode, if_block_anchor);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if_blocks[current_block_type_index].d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(45:2) {#each article as produit}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let t;
	let div;
	let current;
	let each_value = /*article*/ ctx[0];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			t = space();
			div = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1q65eyj\"]", document.head);
			head_nodes.forEach(detach_dev);
			t = claim_space(nodes);
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Blast Shop";
			attr_dev(div, "class", "all svelte-1v4dxhd");
			add_location(div, file, 42, 2, 867);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
			insert_dev(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*article, urlpApi*/ 1) {
				each_value = /*article*/ ctx[0];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(div, null);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
			if (detaching) detach_dev(div);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const produitsQuery = gql`
    query produit {
      categories(sort: "ordre") {
        nom
        ordre
        produits {
          id
          nom
          description
          prix
          image {
            url
          }
        }
      }
    }
  `;

async function preload({ params, query }) {
	const client = new DefaultClient({
			uri: "http://51.210.96.39:1337/graphql",
			fetch: this.fetch
		});

	const results = await client.query({ query: produitsQuery });
	return { article: results.data.categories };
}

let urlpApi = "http://51.210.96.39:1337";

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Shop", slots, []);
	let { article } = $$props;
	const writable_props = ["article"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Shop> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("article" in $$props) $$invalidate(0, article = $$props.article);
	};

	$$self.$capture_state = () => ({
		ApolloClient: DefaultClient,
		gql,
		Produit,
		produitsQuery,
		preload,
		urlpApi,
		article
	});

	$$self.$inject_state = $$props => {
		if ("article" in $$props) $$invalidate(0, article = $$props.article);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [article];
}

class Shop extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { article: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Shop",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*article*/ ctx[0] === undefined && !("article" in props)) {
			console.warn("<Shop> was created without expected prop 'article'");
		}
	}

	get article() {
		throw new Error("<Shop>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set article(value) {
		throw new Error("<Shop>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Shop;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
