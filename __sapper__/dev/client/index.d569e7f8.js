import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, L as createEventDispatcher, e as element, c as claim_element, l as children, b as detach_dev, g as attr_dev, h as add_location, k as insert_dev, j as append_dev, A as listen_dev, n as noop, E as run_all, F as create_component, G as claim_component, I as mount_component, B as transition_in, C as transition_out, J as destroy_component, t as text, a as space, m as claim_text, f as claim_space, w as set_data_dev, K as group_outros, D as check_outros, r as validate_each_argument, p as empty, q as query_selector_all, x as destroy_each } from './client.db558c1a.js';
import { g as gql, D as DefaultClient } from './bundle.esm.ce987c6b.js';

/* src/components/Modal.svelte generated by Svelte v3.35.0 */
const file$2 = "src/components/Modal.svelte";

function create_fragment$2(ctx) {
	let div1;
	let div0;
	let img;
	let img_src_value;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			img = claim_element(div0_nodes, "IMG", { src: true, alt: true, class: true });
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*imgModal*/ ctx[0])) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "test");
			attr_dev(img, "class", "svelte-8jqkah");
			add_location(img, file$2, 12, 4, 251);
			attr_dev(div0, "class", "card svelte-8jqkah");
			add_location(div0, file$2, 11, 0, 228);
			attr_dev(div1, "class", "overlay svelte-8jqkah");
			add_location(div1, file$2, 10, 0, 184);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
			append_dev(div0, img);

			if (!mounted) {
				dispose = [
					listen_dev(img, "click", /*closeModal*/ ctx[1], false, false, false),
					listen_dev(div1, "click", /*closeModal*/ ctx[1], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*imgModal*/ 1 && img.src !== (img_src_value = /*imgModal*/ ctx[0])) {
				attr_dev(img, "src", img_src_value);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Modal", slots, []);
	let { imgModal } = $$props;
	const dispatch = createEventDispatcher();

	function closeModal() {
		dispatch("fermeture");
	}

	const writable_props = ["imgModal"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Modal> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("imgModal" in $$props) $$invalidate(0, imgModal = $$props.imgModal);
	};

	$$self.$capture_state = () => ({
		createEventDispatcher,
		imgModal,
		dispatch,
		closeModal
	});

	$$self.$inject_state = $$props => {
		if ("imgModal" in $$props) $$invalidate(0, imgModal = $$props.imgModal);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [imgModal, closeModal];
}

class Modal extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, { imgModal: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Modal",
			options,
			id: create_fragment$2.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*imgModal*/ ctx[0] === undefined && !("imgModal" in props)) {
			console.warn("<Modal> was created without expected prop 'imgModal'");
		}
	}

	get imgModal() {
		throw new Error("<Modal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set imgModal(value) {
		throw new Error("<Modal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/Produit.svelte generated by Svelte v3.35.0 */
const file$1 = "src/components/Produit.svelte";

// (63:4) {#if toggle}
function create_if_block$1(ctx) {
	let modal;
	let current;

	modal = new Modal({
			props: { imgModal: /*imgModalProduit*/ ctx[4] },
			$$inline: true
		});

	modal.$on("fermeture", /*toggleFunc*/ ctx[14]);

	const block = {
		c: function create() {
			create_component(modal.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(modal.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(modal, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const modal_changes = {};
			if (dirty & /*imgModalProduit*/ 16) modal_changes.imgModal = /*imgModalProduit*/ ctx[4];
			modal.$set(modal_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(modal.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(modal.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(modal, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$1.name,
		type: "if",
		source: "(63:4) {#if toggle}",
		ctx
	});

	return block;
}

function create_fragment$1(ctx) {
	let article;
	let header;
	let h2;
	let t0;
	let t1;
	let p;
	let t2;
	let br;
	let t3;
	let span;
	let t4;
	let t5;
	let t6;
	let t7;
	let select;
	let option0;
	let t8;
	let option1;
	let t9;
	let option2;
	let t10;
	let option3;
	let t11;
	let option4;
	let t12;
	let option5;
	let t13;
	let option6;
	let t14;
	let t15;
	let img;
	let img_src_value;
	let t16;
	let div;
	let button;
	let t17;
	let t18;
	let current;
	let mounted;
	let dispose;
	let if_block = /*toggle*/ ctx[13] && create_if_block$1(ctx);

	const block = {
		c: function create() {
			article = element("article");
			header = element("header");
			h2 = element("h2");
			t0 = text(/*nomProduit*/ ctx[1]);
			t1 = space();
			p = element("p");
			t2 = text(/*descriptionProduit*/ ctx[5]);
			br = element("br");
			t3 = space();
			span = element("span");
			t4 = text("Prix : ");
			t5 = text(/*prixProduit*/ ctx[2]);
			t6 = text(" €");
			t7 = space();
			select = element("select");
			option0 = element("option");
			t8 = text("--C--");
			option1 = element("option");
			t9 = text("Dog");
			option2 = element("option");
			t10 = text("Cat");
			option3 = element("option");
			t11 = text("Hamster");
			option4 = element("option");
			t12 = text("Parrot");
			option5 = element("option");
			t13 = text("Spider");
			option6 = element("option");
			t14 = text("Goldfish");
			t15 = space();
			img = element("img");
			t16 = space();
			div = element("div");
			button = element("button");
			t17 = text("Ajouter au Panier");
			t18 = space();
			if (if_block) if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			article = claim_element(nodes, "ARTICLE", { class: true });
			var article_nodes = children(article);
			header = claim_element(article_nodes, "HEADER", { class: true });
			var header_nodes = children(header);
			h2 = claim_element(header_nodes, "H2", {});
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, /*nomProduit*/ ctx[1]);
			h2_nodes.forEach(detach_dev);
			t1 = claim_space(header_nodes);
			p = claim_element(header_nodes, "P", {});
			var p_nodes = children(p);
			t2 = claim_text(p_nodes, /*descriptionProduit*/ ctx[5]);
			br = claim_element(p_nodes, "BR", {});
			t3 = claim_space(p_nodes);
			span = claim_element(p_nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			t4 = claim_text(span_nodes, "Prix : ");
			t5 = claim_text(span_nodes, /*prixProduit*/ ctx[2]);
			t6 = claim_text(span_nodes, " €");
			span_nodes.forEach(detach_dev);
			p_nodes.forEach(detach_dev);
			t7 = claim_space(header_nodes);
			select = claim_element(header_nodes, "SELECT", { id: true });
			var select_nodes = children(select);
			option0 = claim_element(select_nodes, "OPTION", { value: true });
			var option0_nodes = children(option0);
			t8 = claim_text(option0_nodes, "--C--");
			option0_nodes.forEach(detach_dev);
			option1 = claim_element(select_nodes, "OPTION", { value: true });
			var option1_nodes = children(option1);
			t9 = claim_text(option1_nodes, "Dog");
			option1_nodes.forEach(detach_dev);
			option2 = claim_element(select_nodes, "OPTION", { value: true });
			var option2_nodes = children(option2);
			t10 = claim_text(option2_nodes, "Cat");
			option2_nodes.forEach(detach_dev);
			option3 = claim_element(select_nodes, "OPTION", { value: true });
			var option3_nodes = children(option3);
			t11 = claim_text(option3_nodes, "Hamster");
			option3_nodes.forEach(detach_dev);
			option4 = claim_element(select_nodes, "OPTION", { value: true });
			var option4_nodes = children(option4);
			t12 = claim_text(option4_nodes, "Parrot");
			option4_nodes.forEach(detach_dev);
			option5 = claim_element(select_nodes, "OPTION", { value: true });
			var option5_nodes = children(option5);
			t13 = claim_text(option5_nodes, "Spider");
			option5_nodes.forEach(detach_dev);
			option6 = claim_element(select_nodes, "OPTION", { value: true });
			var option6_nodes = children(option6);
			t14 = claim_text(option6_nodes, "Goldfish");
			option6_nodes.forEach(detach_dev);
			select_nodes.forEach(detach_dev);
			header_nodes.forEach(detach_dev);
			t15 = claim_space(article_nodes);
			img = claim_element(article_nodes, "IMG", { src: true, alt: true, class: true });
			t16 = claim_space(article_nodes);
			div = claim_element(article_nodes, "DIV", { class: true });
			var div_nodes = children(div);

			button = claim_element(div_nodes, "BUTTON", {
				class: true,
				"data-item-id": true,
				"data-item-price": true,
				"data-item-categories": true,
				"data-item-url": true,
				"data-item-image": true,
				"data-item-name": true,
				"data-item-custom1-name": true,
				"data-item-custom1-options": true,
				"data-item-custom1-required": true,
				"data-item-custom2-name": true,
				"data-item-custom2-options": true,
				"data-item-custom2-required": true,
				"data-item-custom3-name": true,
				"data-item-custom3-options": true,
				"data-item-custom3-required": true,
				"data-item-min-price": true
			});

			var button_nodes = children(button);
			t17 = claim_text(button_nodes, "Ajouter au Panier");
			button_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			t18 = claim_space(article_nodes);
			if (if_block) if_block.l(article_nodes);
			article_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h2, file$1, 24, 2, 478);
			add_location(br, file$1, 25, 25, 525);
			attr_dev(span, "class", "svelte-1ernrbq");
			add_location(span, file$1, 26, 4, 536);
			add_location(p, file$1, 25, 2, 502);
			option0.__value = "";
			option0.value = option0.__value;
			add_location(option0, file$1, 28, 6, 611);
			option1.__value = "dog";
			option1.value = option1.__value;
			add_location(option1, file$1, 29, 6, 649);
			option2.__value = "cat";
			option2.value = option2.__value;
			add_location(option2, file$1, 30, 6, 688);
			option3.__value = "hamster";
			option3.value = option3.__value;
			add_location(option3, file$1, 31, 6, 727);
			option4.__value = "parrot";
			option4.value = option4.__value;
			add_location(option4, file$1, 32, 6, 774);
			option5.__value = "spider";
			option5.value = option5.__value;
			add_location(option5, file$1, 33, 6, 819);
			option6.__value = "goldfish";
			option6.value = option6.__value;
			add_location(option6, file$1, 34, 6, 864);
			attr_dev(select, "id", "pet-select");
			add_location(select, file$1, 27, 4, 580);
			attr_dev(header, "class", "svelte-1ernrbq");
			add_location(header, file$1, 23, 0, 467);
			if (img.src !== (img_src_value = /*imgProduit*/ ctx[0])) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "test");
			attr_dev(img, "class", "svelte-1ernrbq");
			add_location(img, file$1, 38, 2, 934);
			attr_dev(button, "class", "snipcart-add-item svelte-1ernrbq");
			attr_dev(button, "data-item-id", /*idProduit*/ ctx[3]);
			attr_dev(button, "data-item-price", /*prixProduit*/ ctx[2]);
			attr_dev(button, "data-item-categories", /*itemGategorie*/ ctx[6]);
			attr_dev(button, "data-item-url", "/shop");
			attr_dev(button, "data-item-image", /*imgProduit*/ ctx[0]);
			attr_dev(button, "data-item-name", /*nomProduit*/ ctx[1]);
			attr_dev(button, "data-item-custom1-name", /*custom1*/ ctx[7]);
			attr_dev(button, "data-item-custom1-options", /*options1*/ ctx[8]);
			attr_dev(button, "data-item-custom1-required", "true");
			attr_dev(button, "data-item-custom2-name", /*custom2*/ ctx[9]);
			attr_dev(button, "data-item-custom2-options", /*options2*/ ctx[10]);
			attr_dev(button, "data-item-custom2-required", "true");
			attr_dev(button, "data-item-custom3-name", /*custom3*/ ctx[11]);
			attr_dev(button, "data-item-custom3-options", /*options3*/ ctx[12]);
			attr_dev(button, "data-item-custom3-required", "true");
			attr_dev(button, "data-item-min-price", "15");
			add_location(button, file$1, 40, 2, 1015);
			attr_dev(div, "class", "btns svelte-1ernrbq");
			add_location(div, file$1, 39, 2, 994);
			attr_dev(article, "class", "svelte-1ernrbq");
			add_location(article, file$1, 22, 0, 457);
		},
		m: function mount(target, anchor) {
			insert_dev(target, article, anchor);
			append_dev(article, header);
			append_dev(header, h2);
			append_dev(h2, t0);
			append_dev(header, t1);
			append_dev(header, p);
			append_dev(p, t2);
			append_dev(p, br);
			append_dev(p, t3);
			append_dev(p, span);
			append_dev(span, t4);
			append_dev(span, t5);
			append_dev(span, t6);
			append_dev(header, t7);
			append_dev(header, select);
			append_dev(select, option0);
			append_dev(option0, t8);
			append_dev(select, option1);
			append_dev(option1, t9);
			append_dev(select, option2);
			append_dev(option2, t10);
			append_dev(select, option3);
			append_dev(option3, t11);
			append_dev(select, option4);
			append_dev(option4, t12);
			append_dev(select, option5);
			append_dev(option5, t13);
			append_dev(select, option6);
			append_dev(option6, t14);
			append_dev(article, t15);
			append_dev(article, img);
			append_dev(article, t16);
			append_dev(article, div);
			append_dev(div, button);
			append_dev(button, t17);
			append_dev(article, t18);
			if (if_block) if_block.m(article, null);
			current = true;

			if (!mounted) {
				dispose = listen_dev(img, "click", /*toggleFunc*/ ctx[14], false, false, false);
				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (!current || dirty & /*nomProduit*/ 2) set_data_dev(t0, /*nomProduit*/ ctx[1]);
			if (!current || dirty & /*descriptionProduit*/ 32) set_data_dev(t2, /*descriptionProduit*/ ctx[5]);
			if (!current || dirty & /*prixProduit*/ 4) set_data_dev(t5, /*prixProduit*/ ctx[2]);

			if (!current || dirty & /*imgProduit*/ 1 && img.src !== (img_src_value = /*imgProduit*/ ctx[0])) {
				attr_dev(img, "src", img_src_value);
			}

			if (!current || dirty & /*idProduit*/ 8) {
				attr_dev(button, "data-item-id", /*idProduit*/ ctx[3]);
			}

			if (!current || dirty & /*prixProduit*/ 4) {
				attr_dev(button, "data-item-price", /*prixProduit*/ ctx[2]);
			}

			if (!current || dirty & /*itemGategorie*/ 64) {
				attr_dev(button, "data-item-categories", /*itemGategorie*/ ctx[6]);
			}

			if (!current || dirty & /*imgProduit*/ 1) {
				attr_dev(button, "data-item-image", /*imgProduit*/ ctx[0]);
			}

			if (!current || dirty & /*nomProduit*/ 2) {
				attr_dev(button, "data-item-name", /*nomProduit*/ ctx[1]);
			}

			if (!current || dirty & /*custom1*/ 128) {
				attr_dev(button, "data-item-custom1-name", /*custom1*/ ctx[7]);
			}

			if (!current || dirty & /*options1*/ 256) {
				attr_dev(button, "data-item-custom1-options", /*options1*/ ctx[8]);
			}

			if (!current || dirty & /*custom2*/ 512) {
				attr_dev(button, "data-item-custom2-name", /*custom2*/ ctx[9]);
			}

			if (!current || dirty & /*options2*/ 1024) {
				attr_dev(button, "data-item-custom2-options", /*options2*/ ctx[10]);
			}

			if (!current || dirty & /*custom3*/ 2048) {
				attr_dev(button, "data-item-custom3-name", /*custom3*/ ctx[11]);
			}

			if (!current || dirty & /*options3*/ 4096) {
				attr_dev(button, "data-item-custom3-options", /*options3*/ ctx[12]);
			}

			if (/*toggle*/ ctx[13]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*toggle*/ 8192) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block$1(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(article, null);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(article);
			if (if_block) if_block.d();
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Produit", slots, []);
	let { imgProduit } = $$props;
	let { nomProduit } = $$props;
	let { prixProduit } = $$props;
	let { idProduit } = $$props;
	let { imgModalProduit } = $$props;
	let { descriptionProduit } = $$props;
	let { itemGategorie } = $$props;
	let { custom1 } = $$props;
	let { options1 } = $$props;
	let { custom2 } = $$props;
	let { options2 } = $$props;
	let { custom3 } = $$props;
	let { options3 } = $$props;
	let toggle = false;

	function toggleFunc() {
		$$invalidate(13, toggle = !toggle);
	}

	const writable_props = [
		"imgProduit",
		"nomProduit",
		"prixProduit",
		"idProduit",
		"imgModalProduit",
		"descriptionProduit",
		"itemGategorie",
		"custom1",
		"options1",
		"custom2",
		"options2",
		"custom3",
		"options3"
	];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Produit> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("imgProduit" in $$props) $$invalidate(0, imgProduit = $$props.imgProduit);
		if ("nomProduit" in $$props) $$invalidate(1, nomProduit = $$props.nomProduit);
		if ("prixProduit" in $$props) $$invalidate(2, prixProduit = $$props.prixProduit);
		if ("idProduit" in $$props) $$invalidate(3, idProduit = $$props.idProduit);
		if ("imgModalProduit" in $$props) $$invalidate(4, imgModalProduit = $$props.imgModalProduit);
		if ("descriptionProduit" in $$props) $$invalidate(5, descriptionProduit = $$props.descriptionProduit);
		if ("itemGategorie" in $$props) $$invalidate(6, itemGategorie = $$props.itemGategorie);
		if ("custom1" in $$props) $$invalidate(7, custom1 = $$props.custom1);
		if ("options1" in $$props) $$invalidate(8, options1 = $$props.options1);
		if ("custom2" in $$props) $$invalidate(9, custom2 = $$props.custom2);
		if ("options2" in $$props) $$invalidate(10, options2 = $$props.options2);
		if ("custom3" in $$props) $$invalidate(11, custom3 = $$props.custom3);
		if ("options3" in $$props) $$invalidate(12, options3 = $$props.options3);
	};

	$$self.$capture_state = () => ({
		Modal,
		imgProduit,
		nomProduit,
		prixProduit,
		idProduit,
		imgModalProduit,
		descriptionProduit,
		itemGategorie,
		custom1,
		options1,
		custom2,
		options2,
		custom3,
		options3,
		toggle,
		toggleFunc
	});

	$$self.$inject_state = $$props => {
		if ("imgProduit" in $$props) $$invalidate(0, imgProduit = $$props.imgProduit);
		if ("nomProduit" in $$props) $$invalidate(1, nomProduit = $$props.nomProduit);
		if ("prixProduit" in $$props) $$invalidate(2, prixProduit = $$props.prixProduit);
		if ("idProduit" in $$props) $$invalidate(3, idProduit = $$props.idProduit);
		if ("imgModalProduit" in $$props) $$invalidate(4, imgModalProduit = $$props.imgModalProduit);
		if ("descriptionProduit" in $$props) $$invalidate(5, descriptionProduit = $$props.descriptionProduit);
		if ("itemGategorie" in $$props) $$invalidate(6, itemGategorie = $$props.itemGategorie);
		if ("custom1" in $$props) $$invalidate(7, custom1 = $$props.custom1);
		if ("options1" in $$props) $$invalidate(8, options1 = $$props.options1);
		if ("custom2" in $$props) $$invalidate(9, custom2 = $$props.custom2);
		if ("options2" in $$props) $$invalidate(10, options2 = $$props.options2);
		if ("custom3" in $$props) $$invalidate(11, custom3 = $$props.custom3);
		if ("options3" in $$props) $$invalidate(12, options3 = $$props.options3);
		if ("toggle" in $$props) $$invalidate(13, toggle = $$props.toggle);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		imgProduit,
		nomProduit,
		prixProduit,
		idProduit,
		imgModalProduit,
		descriptionProduit,
		itemGategorie,
		custom1,
		options1,
		custom2,
		options2,
		custom3,
		options3,
		toggle,
		toggleFunc
	];
}

class Produit extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance$1, create_fragment$1, safe_not_equal, {
			imgProduit: 0,
			nomProduit: 1,
			prixProduit: 2,
			idProduit: 3,
			imgModalProduit: 4,
			descriptionProduit: 5,
			itemGategorie: 6,
			custom1: 7,
			options1: 8,
			custom2: 9,
			options2: 10,
			custom3: 11,
			options3: 12
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Produit",
			options,
			id: create_fragment$1.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*imgProduit*/ ctx[0] === undefined && !("imgProduit" in props)) {
			console.warn("<Produit> was created without expected prop 'imgProduit'");
		}

		if (/*nomProduit*/ ctx[1] === undefined && !("nomProduit" in props)) {
			console.warn("<Produit> was created without expected prop 'nomProduit'");
		}

		if (/*prixProduit*/ ctx[2] === undefined && !("prixProduit" in props)) {
			console.warn("<Produit> was created without expected prop 'prixProduit'");
		}

		if (/*idProduit*/ ctx[3] === undefined && !("idProduit" in props)) {
			console.warn("<Produit> was created without expected prop 'idProduit'");
		}

		if (/*imgModalProduit*/ ctx[4] === undefined && !("imgModalProduit" in props)) {
			console.warn("<Produit> was created without expected prop 'imgModalProduit'");
		}

		if (/*descriptionProduit*/ ctx[5] === undefined && !("descriptionProduit" in props)) {
			console.warn("<Produit> was created without expected prop 'descriptionProduit'");
		}

		if (/*itemGategorie*/ ctx[6] === undefined && !("itemGategorie" in props)) {
			console.warn("<Produit> was created without expected prop 'itemGategorie'");
		}

		if (/*custom1*/ ctx[7] === undefined && !("custom1" in props)) {
			console.warn("<Produit> was created without expected prop 'custom1'");
		}

		if (/*options1*/ ctx[8] === undefined && !("options1" in props)) {
			console.warn("<Produit> was created without expected prop 'options1'");
		}

		if (/*custom2*/ ctx[9] === undefined && !("custom2" in props)) {
			console.warn("<Produit> was created without expected prop 'custom2'");
		}

		if (/*options2*/ ctx[10] === undefined && !("options2" in props)) {
			console.warn("<Produit> was created without expected prop 'options2'");
		}

		if (/*custom3*/ ctx[11] === undefined && !("custom3" in props)) {
			console.warn("<Produit> was created without expected prop 'custom3'");
		}

		if (/*options3*/ ctx[12] === undefined && !("options3" in props)) {
			console.warn("<Produit> was created without expected prop 'options3'");
		}
	}

	get imgProduit() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set imgProduit(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get nomProduit() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set nomProduit(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get prixProduit() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set prixProduit(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get idProduit() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set idProduit(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get imgModalProduit() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set imgModalProduit(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get descriptionProduit() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set descriptionProduit(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get itemGategorie() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set itemGategorie(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get custom1() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set custom1(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get options1() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set options1(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get custom2() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set custom2(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get options2() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set options2(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get custom3() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set custom3(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get options3() {
		throw new Error("<Produit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set options3(value) {
		throw new Error("<Produit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/routes/shop/index.svelte generated by Svelte v3.35.0 */
const file = "src/routes/shop/index.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[4] = list[i];
	return child_ctx;
}

// (82:4) {:else}
function create_else_block(ctx) {
	let span;

	const block = {
		c: function create() {
			span = element("span");
			this.h();
		},
		l: function claim(nodes) {
			span = claim_element(nodes, "SPAN", {});
			children(span).forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(span, file, 82, 6, 2274);
		},
		m: function mount(target, anchor) {
			insert_dev(target, span, anchor);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(span);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(82:4) {:else}",
		ctx
	});

	return block;
}

// (60:4) {#if produit.produits.length > 0}
function create_if_block(ctx) {
	let h2;
	let t0_value = /*produit*/ ctx[1].nom + "";
	let t0;
	let t1;
	let div;
	let t2;
	let current;
	let each_value_1 = /*produit*/ ctx[1].produits;
	validate_each_argument(each_value_1);
	let each_blocks = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			h2 = element("h2");
			t0 = text(t0_value);
			t1 = space();
			div = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t2 = space();
			this.h();
		},
		l: function claim(nodes) {
			h2 = claim_element(nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, t0_value);
			h2_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			t2 = claim_space(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h2, "class", "svelte-37oz9");
			add_location(h2, file, 60, 6, 1503);
			attr_dev(div, "class", "container svelte-37oz9");
			add_location(div, file, 62, 6, 1533);
		},
		m: function mount(target, anchor) {
			insert_dev(target, h2, anchor);
			append_dev(h2, t0);
			insert_dev(target, t1, anchor);
			insert_dev(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			append_dev(div, t2);
			current = true;
		},
		p: function update(ctx, dirty) {
			if ((!current || dirty & /*article*/ 1) && t0_value !== (t0_value = /*produit*/ ctx[1].nom + "")) set_data_dev(t0, t0_value);

			if (dirty & /*article, urlpApi*/ 1) {
				each_value_1 = /*produit*/ ctx[1].produits;
				validate_each_argument(each_value_1);
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block_1(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(div, t2);
					}
				}

				group_outros();

				for (i = each_value_1.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value_1.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(h2);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(div);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(60:4) {#if produit.produits.length > 0}",
		ctx
	});

	return block;
}

// (64:8) {#each produit.produits as product}
function create_each_block_1(ctx) {
	let produit;
	let current;

	produit = new Produit({
			props: {
				itemGategorie: /*produit*/ ctx[1].nom,
				imgProduit: urlpApi + /*product*/ ctx[4].image.url,
				nomProduit: /*product*/ ctx[4].nom,
				descriptionProduit: /*product*/ ctx[4].description,
				prixProduit: /*product*/ ctx[4].prix,
				idProduit: /*product*/ ctx[4].id,
				imgModalProduit: urlpApi + /*product*/ ctx[4].image.url,
				custom1: /*product*/ ctx[4].nameCustomOption1,
				options1: /*product*/ ctx[4].customOption1,
				custom2: /*product*/ ctx[4].nameCustomOption2,
				options2: /*product*/ ctx[4].customOption2,
				custom3: /*product*/ ctx[4].nameCustomOption3,
				options3: /*product*/ ctx[4].customOption3
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(produit.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(produit.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(produit, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const produit_changes = {};
			if (dirty & /*article*/ 1) produit_changes.itemGategorie = /*produit*/ ctx[1].nom;
			if (dirty & /*article*/ 1) produit_changes.imgProduit = urlpApi + /*product*/ ctx[4].image.url;
			if (dirty & /*article*/ 1) produit_changes.nomProduit = /*product*/ ctx[4].nom;
			if (dirty & /*article*/ 1) produit_changes.descriptionProduit = /*product*/ ctx[4].description;
			if (dirty & /*article*/ 1) produit_changes.prixProduit = /*product*/ ctx[4].prix;
			if (dirty & /*article*/ 1) produit_changes.idProduit = /*product*/ ctx[4].id;
			if (dirty & /*article*/ 1) produit_changes.imgModalProduit = urlpApi + /*product*/ ctx[4].image.url;
			if (dirty & /*article*/ 1) produit_changes.custom1 = /*product*/ ctx[4].nameCustomOption1;
			if (dirty & /*article*/ 1) produit_changes.options1 = /*product*/ ctx[4].customOption1;
			if (dirty & /*article*/ 1) produit_changes.custom2 = /*product*/ ctx[4].nameCustomOption2;
			if (dirty & /*article*/ 1) produit_changes.options2 = /*product*/ ctx[4].customOption2;
			if (dirty & /*article*/ 1) produit_changes.custom3 = /*product*/ ctx[4].nameCustomOption3;
			if (dirty & /*article*/ 1) produit_changes.options3 = /*product*/ ctx[4].customOption3;
			produit.$set(produit_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(produit.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(produit.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(produit, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block_1.name,
		type: "each",
		source: "(64:8) {#each produit.produits as product}",
		ctx
	});

	return block;
}

// (59:2) {#each article as produit}
function create_each_block(ctx) {
	let current_block_type_index;
	let if_block;
	let if_block_anchor;
	let current;
	const if_block_creators = [create_if_block, create_else_block];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (/*produit*/ ctx[1].produits.length > 0) return 0;
		return 1;
	}

	current_block_type_index = select_block_type(ctx);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	const block = {
		c: function create() {
			if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			if_blocks[current_block_type_index].m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(ctx);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				group_outros();

				transition_out(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				check_outros();
				if_block = if_blocks[current_block_type_index];

				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				} else {
					if_block.p(ctx, dirty);
				}

				transition_in(if_block, 1);
				if_block.m(if_block_anchor.parentNode, if_block_anchor);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if_blocks[current_block_type_index].d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(59:2) {#each article as produit}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let meta;
	let t0;
	let div;
	let h1;
	let t1;
	let t2;
	let current;
	let each_value = /*article*/ ctx[0];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			meta = element("meta");
			t0 = space();
			div = element("div");
			h1 = element("h1");
			t1 = text("BLAST SHOP");
			t2 = space();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-193700f\"]", document.head);
			meta = claim_element(head_nodes, "META", { description: true });
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			h1 = claim_element(div_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "BLAST SHOP");
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(div_nodes);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(meta, "description", "Vous avez aimez une peinture de Kalouf, une sculpture de Romain Lardanchet. Achetez sur la boutique un poster de cette oeuvre ou pourquoi pas une sculpture en impression 3D.\n  Quel que soit votre budget vous trouverez une oeuvre Blast qui vous correspond  \n\t ");
			add_location(meta, file, 45, 2, 958);
			document.title = "Boutique du collectif Blast avec des posters et autres produits dérivés et\n    des oeuvres originales";
			attr_dev(h1, "class", "svelte-37oz9");
			add_location(h1, file, 57, 2, 1410);
			attr_dev(div, "class", "all svelte-37oz9");
			add_location(div, file, 56, 0, 1390);
		},
		m: function mount(target, anchor) {
			append_dev(document.head, meta);
			insert_dev(target, t0, anchor);
			insert_dev(target, div, anchor);
			append_dev(div, h1);
			append_dev(h1, t1);
			append_dev(div, t2);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*article, urlpApi*/ 1) {
				each_value = /*article*/ ctx[0];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(div, null);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			detach_dev(meta);
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const produitsQuery = gql`
    query produit {
      categories(sort: "ordre") {
        nom
        ordre
        produits {
          id
          nom
          description
          prix
          nameCustomOption1
          customOption1
          nameCustomOption2
          customOption2
          nameCustomOption3
          customOption3
          image {
            url
          }
        }
      }
    }
  `;

async function preload() {
	const client = new DefaultClient({
			uri: "https://www.grldfaure.xyz/graphql",
			fetch: this.fetch
		});

	const results = await client.query({ query: produitsQuery });
	return { article: results.data.categories };
}

let urlpApi = "https://www.grldfaure.xyz";

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Shop", slots, []);
	let { article } = $$props;
	const writable_props = ["article"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Shop> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("article" in $$props) $$invalidate(0, article = $$props.article);
	};

	$$self.$capture_state = () => ({
		ApolloClient: DefaultClient,
		gql,
		Produit,
		produitsQuery,
		preload,
		urlpApi,
		article
	});

	$$self.$inject_state = $$props => {
		if ("article" in $$props) $$invalidate(0, article = $$props.article);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [article];
}

class Shop extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { article: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Shop",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*article*/ ctx[0] === undefined && !("article" in props)) {
			console.warn("<Shop> was created without expected prop 'article'");
		}
	}

	get article() {
		throw new Error("<Shop>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set article(value) {
		throw new Error("<Shop>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Shop;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguZDU2OWU3ZjguanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL01vZGFsLnN2ZWx0ZSIsIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1Byb2R1aXQuc3ZlbHRlIiwiLi4vLi4vLi4vc3JjL3JvdXRlcy9zaG9wL2luZGV4LnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuaW1wb3J0IHsgY3JlYXRlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSAnc3ZlbHRlJztcblxuZXhwb3J0IGxldCBpbWdNb2RhbDtcblxuY29uc3QgZGlzcGF0Y2ggPSBjcmVhdGVFdmVudERpc3BhdGNoZXIoKTtcbmZ1bmN0aW9uIGNsb3NlTW9kYWwoKXtcbiAgICBkaXNwYXRjaCgnZmVybWV0dXJlJyk7XG59XG48L3NjcmlwdD5cbjxkaXYgb246Y2xpY2s9e2Nsb3NlTW9kYWx9IGNsYXNzPVwib3ZlcmxheVwiPlxuPGRpdiBjbGFzcz1cImNhcmRcIj5cbiAgICA8aW1nIG9uOmNsaWNrPXtjbG9zZU1vZGFsfSBzcmM9e2ltZ01vZGFsfSBhbHQ9XCJ0ZXN0XCIgLz5cbjwvZGl2PlxuPC9kaXY+XG48c3R5bGU+XG4gICAgXG4gICAgLm92ZXJsYXl7XG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsIDAuNyk7XG4gICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICAgIH1cbiAgIC5jYXJke1xuICAgIG1hcmdpbi10b3A6MjBweDtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICB9XG4gICAgLmNhcmQgaW1ne1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZWYxMWExO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgbWF4LWhlaWdodDogODV2aDtcbiAgICAgICAgb2JqZWN0LWZpdDogY29udGFpbjtcbiAgICAgICAgY3Vyc29yOnpvb20tb3V0O1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xuXG4gICAgfVxuXG4gICAgQG1lZGlhKG1heC13aWR0aDo2MDBweCl7XG4gICAgICAgIC5jYXJkIGltZ3tcbiAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgbWF4LWhlaWdodDogOTB2aDtcbiAgICB9XG4gICAgLmNhcmQge1xuICAgICAgICB0b3A6IDIwJTtcbiAgICAgICAgbGVmdDogMTAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNSUsIDAlKTtcblxuICAgIH1cbiAgICAuY2FyZCBpbWd7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBtYXgtaGVpZ2h0OiAxMDB2aDtcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgIGN1cnNvcjp6b29tLW91dDtcbiAgICB9XG5cbiAgICB9XG48L3N0eWxlPlxuIiwiPHNjcmlwdD5cbiAgaW1wb3J0IE1vZGFsIGZyb20gXCIuL01vZGFsLnN2ZWx0ZVwiXG4gIGV4cG9ydCBsZXQgaW1nUHJvZHVpdDtcbiAgZXhwb3J0IGxldCBub21Qcm9kdWl0O1xuICBleHBvcnQgbGV0IHByaXhQcm9kdWl0O1xuICBleHBvcnQgbGV0IGlkUHJvZHVpdDtcbiAgZXhwb3J0IGxldCBpbWdNb2RhbFByb2R1aXQ7XG4gIGV4cG9ydCBsZXQgZGVzY3JpcHRpb25Qcm9kdWl0O1xuICBleHBvcnQgbGV0IGl0ZW1HYXRlZ29yaWU7XG4gIGV4cG9ydCBsZXQgY3VzdG9tMTtcbiAgZXhwb3J0IGxldCBvcHRpb25zMTtcbiAgZXhwb3J0IGxldCBjdXN0b20yO1xuICBleHBvcnQgbGV0IG9wdGlvbnMyO1xuICBleHBvcnQgbGV0IGN1c3RvbTM7XG4gIGV4cG9ydCBsZXQgb3B0aW9uczM7XG5cbiAgbGV0IHRvZ2dsZSA9IGZhbHNlO1xuICBmdW5jdGlvbiB0b2dnbGVGdW5jKCl7XG4gICAgdG9nZ2xlID0gIXRvZ2dsZTtcbiAgfVxuPC9zY3JpcHQ+XG5cbjxhcnRpY2xlPlxuPGhlYWRlcj5cbiAgPGgyPntub21Qcm9kdWl0fTwvaDI+XG4gIDxwPntkZXNjcmlwdGlvblByb2R1aXR9PGJyIC8+XG4gICAgPHNwYW4+UHJpeCA6IHtwcml4UHJvZHVpdH0g4oKsPC9zcGFuPjwvcD5cbiAgICA8c2VsZWN0IGlkPVwicGV0LXNlbGVjdFwiPlxuICAgICAgPG9wdGlvbiB2YWx1ZT1cIlwiPi0tQy0tPC9vcHRpb24+XG4gICAgICA8b3B0aW9uIHZhbHVlPVwiZG9nXCI+RG9nPC9vcHRpb24+XG4gICAgICA8b3B0aW9uIHZhbHVlPVwiY2F0XCI+Q2F0PC9vcHRpb24+XG4gICAgICA8b3B0aW9uIHZhbHVlPVwiaGFtc3RlclwiPkhhbXN0ZXI8L29wdGlvbj5cbiAgICAgIDxvcHRpb24gdmFsdWU9XCJwYXJyb3RcIj5QYXJyb3Q8L29wdGlvbj5cbiAgICAgIDxvcHRpb24gdmFsdWU9XCJzcGlkZXJcIj5TcGlkZXI8L29wdGlvbj5cbiAgICAgIDxvcHRpb24gdmFsdWU9XCJnb2xkZmlzaFwiPkdvbGRmaXNoPC9vcHRpb24+XG4gIDwvc2VsZWN0PlxuICA8L2hlYWRlcj5cblxuICA8aW1nIG9uOmNsaWNrPXt0b2dnbGVGdW5jfSBzcmM9e2ltZ1Byb2R1aXR9IGFsdD1cInRlc3RcIiAvPlxuICA8ZGl2IGNsYXNzPVwiYnRuc1wiPlxuICA8YnV0dG9uXG4gICAgY2xhc3M9XCJzbmlwY2FydC1hZGQtaXRlbVwiXG4gICAgZGF0YS1pdGVtLWlkPXtpZFByb2R1aXR9XG4gICAgZGF0YS1pdGVtLXByaWNlPXtwcml4UHJvZHVpdH1cbiAgICBkYXRhLWl0ZW0tY2F0ZWdvcmllcz17aXRlbUdhdGVnb3JpZX1cbiAgICBkYXRhLWl0ZW0tdXJsPVwiL3Nob3BcIlxuICAgIGRhdGEtaXRlbS1pbWFnZT17aW1nUHJvZHVpdH1cbiAgICBkYXRhLWl0ZW0tbmFtZT17bm9tUHJvZHVpdH1cbiAgICBkYXRhLWl0ZW0tY3VzdG9tMS1uYW1lPXtjdXN0b20xfVxuICAgIGRhdGEtaXRlbS1jdXN0b20xLW9wdGlvbnM9e29wdGlvbnMxfVxuICAgIGRhdGEtaXRlbS1jdXN0b20xLXJlcXVpcmVkPVwidHJ1ZVwiXG4gICAgZGF0YS1pdGVtLWN1c3RvbTItbmFtZT17Y3VzdG9tMn1cbiAgICBkYXRhLWl0ZW0tY3VzdG9tMi1vcHRpb25zPXtvcHRpb25zMn1cbiAgICBkYXRhLWl0ZW0tY3VzdG9tMi1yZXF1aXJlZD1cInRydWVcIlxuICAgIGRhdGEtaXRlbS1jdXN0b20zLW5hbWU9e2N1c3RvbTN9XG4gICAgZGF0YS1pdGVtLWN1c3RvbTMtb3B0aW9ucz17b3B0aW9uczN9XG4gICAgZGF0YS1pdGVtLWN1c3RvbTMtcmVxdWlyZWQ9XCJ0cnVlXCJcbiAgICBkYXRhLWl0ZW0tbWluLXByaWNlPVwiMTVcIlxuICA+XG4gICAgQWpvdXRlciBhdSBQYW5pZXJcbiAgPC9idXR0b24+XG48L2Rpdj5cbiAgICB7I2lmIHRvZ2dsZX1cbiAgICAgICAgPE1vZGFsIFxuICAgICAgICBpbWdNb2RhbD17aW1nTW9kYWxQcm9kdWl0fVxuICAgICAgICBvbjpmZXJtZXR1cmU9e3RvZ2dsZUZ1bmN9Lz5cbiAgICB7L2lmfVxuPC9hcnRpY2xlPlxuPHN0eWxlPlxuICBhcnRpY2xlIGhlYWRlcntcbiAgICBib3JkZXItYm90dG9tOjFweCBzb2xpZCAjZWYxMWExO1xuICB9XG4gIGFydGljbGV7XG4gICAgZGlzcGxheTpmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2VmMTFhMTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjb250YWluO1xuICB9XG4gIGFydGljbGUgaW1ne1xuICAgIG1hcmdpbi10b3A6MjBweDtcbiAgICBtYXgtd2lkdGg6OTUlO1xuICAgIG1heC1oZWlnaHQ6IDMwMHB4O1xuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgICBjdXJzb3I6IHpvb20taW47XG4gIH1cbiAgLmJ0bnN7XG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAgIG1hcmdpbi10b3A6YXV0bztcbiAgICBkaXNwbGF5OmZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIH1cblxuICBidXR0b257XG4gICAgbWFyZ2luOjVweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjMDAwO1xuICB9XG4gIGJ1dHRvbjpob3ZlcntcbiAgICBjb2xvcjojZWYxMWExO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNlZjExYTE7XG4gIH1cbiBzcGFue1xuICAgZm9udC13ZWlnaHQ6Ym9sZDtcbiB9XG48L3N0eWxlPlxuIiwiPHNjcmlwdCBjb250ZXh0PVwibW9kdWxlXCI+XG4gIGltcG9ydCBBcG9sbG9DbGllbnQsIHsgZ3FsIH0gZnJvbSBcImFwb2xsby1ib29zdFwiO1xuICBpbXBvcnQgUHJvZHVpdCBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9Qcm9kdWl0LnN2ZWx0ZVwiO1xuXG4gIGNvbnN0IHByb2R1aXRzUXVlcnkgPSBncWxgXG4gICAgcXVlcnkgcHJvZHVpdCB7XG4gICAgICBjYXRlZ29yaWVzKHNvcnQ6IFwib3JkcmVcIikge1xuICAgICAgICBub21cbiAgICAgICAgb3JkcmVcbiAgICAgICAgcHJvZHVpdHMge1xuICAgICAgICAgIGlkXG4gICAgICAgICAgbm9tXG4gICAgICAgICAgZGVzY3JpcHRpb25cbiAgICAgICAgICBwcml4XG4gICAgICAgICAgbmFtZUN1c3RvbU9wdGlvbjFcbiAgICAgICAgICBjdXN0b21PcHRpb24xXG4gICAgICAgICAgbmFtZUN1c3RvbU9wdGlvbjJcbiAgICAgICAgICBjdXN0b21PcHRpb24yXG4gICAgICAgICAgbmFtZUN1c3RvbU9wdGlvbjNcbiAgICAgICAgICBjdXN0b21PcHRpb24zXG4gICAgICAgICAgaW1hZ2Uge1xuICAgICAgICAgICAgdXJsXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICBgO1xuICBleHBvcnQgYXN5bmMgZnVuY3Rpb24gcHJlbG9hZCgpIHtcbiAgICBjb25zdCBjbGllbnQgPSBuZXcgQXBvbGxvQ2xpZW50KHtcbiAgICAgIHVyaTogXCJodHRwczovL3d3dy5ncmxkZmF1cmUueHl6L2dyYXBocWxcIixcbiAgICAgIGZldGNoOiB0aGlzLmZldGNoLFxuICAgIH0pO1xuICAgIGNvbnN0IHJlc3VsdHMgPSBhd2FpdCBjbGllbnQucXVlcnkoe1xuICAgICAgcXVlcnk6IHByb2R1aXRzUXVlcnksXG4gICAgfSk7XG4gICAgcmV0dXJuIHsgYXJ0aWNsZTogcmVzdWx0cy5kYXRhLmNhdGVnb3JpZXMgfTtcbiAgfVxuICBsZXQgdXJscEFwaSA9IFwiaHR0cHM6Ly93d3cuZ3JsZGZhdXJlLnh5elwiO1xuPC9zY3JpcHQ+XG5cbjxzY3JpcHQ+XG4gIGV4cG9ydCBsZXQgYXJ0aWNsZTtcbjwvc2NyaXB0PlxuXG48c3ZlbHRlOmhlYWQ+XG4gIDxtZXRhXG4gICAgZGVzY3JpcHRpb249XCJWb3VzIGF2ZXogYWltZXogdW5lIHBlaW50dXJlIGRlIEthbG91ZiwgdW5lIHNjdWxwdHVyZSBkZSBSb21haW4gTGFyZGFuY2hldC4gQWNoZXRleiBzdXIgbGEgYm91dGlxdWUgdW4gcG9zdGVyIGRlIGNldHRlIG9ldXZyZSBvdSBwb3VycXVvaSBwYXMgdW5lIHNjdWxwdHVyZSBlbiBpbXByZXNzaW9uIDNELlxuICBRdWVsIHF1ZSBzb2l0IHZvdHJlIGJ1ZGdldCB2b3VzIHRyb3V2ZXJleiB1bmUgb2V1dnJlIEJsYXN0IHF1aSB2b3VzIGNvcnJlc3BvbmQgIFxuXHQgXCJcbiAgLz5cbiAgPHRpdGxlXG4gICAgPkJvdXRpcXVlIGR1IGNvbGxlY3RpZiBCbGFzdCBhdmVjIGRlcyBwb3N0ZXJzIGV0IGF1dHJlcyBwcm9kdWl0cyBkw6lyaXbDqXMgZXRcbiAgICBkZXMgb2V1dnJlcyBvcmlnaW5hbGVzPC90aXRsZVxuICA+XG48L3N2ZWx0ZTpoZWFkPlxuXG48ZGl2IGNsYXNzPVwiYWxsXCI+XG4gIDxoMT5CTEFTVCBTSE9QPC9oMT5cbiAgeyNlYWNoIGFydGljbGUgYXMgcHJvZHVpdH1cbiAgICB7I2lmIHByb2R1aXQucHJvZHVpdHMubGVuZ3RoID4gMH1cbiAgICAgIDxoMj57cHJvZHVpdC5ub219PC9oMj5cblxuICAgICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lclwiPlxuICAgICAgICB7I2VhY2ggcHJvZHVpdC5wcm9kdWl0cyBhcyBwcm9kdWN0fVxuICAgICAgICAgIDxQcm9kdWl0XG4gICAgICAgICAgICBpdGVtR2F0ZWdvcmllPXtwcm9kdWl0Lm5vbX1cbiAgICAgICAgICAgIGltZ1Byb2R1aXQ9e3VybHBBcGkgKyBwcm9kdWN0LmltYWdlLnVybH1cbiAgICAgICAgICAgIG5vbVByb2R1aXQ9e3Byb2R1Y3Qubm9tfVxuICAgICAgICAgICAgZGVzY3JpcHRpb25Qcm9kdWl0PXtwcm9kdWN0LmRlc2NyaXB0aW9ufVxuICAgICAgICAgICAgcHJpeFByb2R1aXQ9e3Byb2R1Y3QucHJpeH1cbiAgICAgICAgICAgIGlkUHJvZHVpdD17cHJvZHVjdC5pZH1cbiAgICAgICAgICAgIGltZ01vZGFsUHJvZHVpdD17dXJscEFwaSArIHByb2R1Y3QuaW1hZ2UudXJsfVxuICAgICAgICAgICAgY3VzdG9tMT17cHJvZHVjdC5uYW1lQ3VzdG9tT3B0aW9uMX1cbiAgICAgICAgICAgIG9wdGlvbnMxPXtwcm9kdWN0LmN1c3RvbU9wdGlvbjF9XG4gICAgICAgICAgICBjdXN0b20yPXtwcm9kdWN0Lm5hbWVDdXN0b21PcHRpb24yfVxuICAgICAgICAgICAgb3B0aW9uczI9e3Byb2R1Y3QuY3VzdG9tT3B0aW9uMn1cbiAgICAgICAgICAgIGN1c3RvbTM9e3Byb2R1Y3QubmFtZUN1c3RvbU9wdGlvbjN9XG4gICAgICAgICAgICBvcHRpb25zMz17cHJvZHVjdC5jdXN0b21PcHRpb24zfVxuICAgICAgICAgIC8+XG4gICAgICAgIHsvZWFjaH1cbiAgICAgIDwvZGl2PlxuICAgIHs6ZWxzZX1cbiAgICAgIDxzcGFuIC8+XG4gICAgey9pZn1cbiAgey9lYWNofVxuPC9kaXY+XG5cbjxzdHlsZT5cbiAgaDEge1xuICAgIG1hcmdpbi10b3A6IDYwcHg7XG4gIH1cbiAgLmNvbnRhaW5lciB7XG4gICAgbWFyZ2luOiAwcHggMjBweDtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZml0LCBtaW5tYXgoMzAwcHgsIDFmcikpO1xuICAgIGdyaWQtZ2FwOiAycmVtO1xuICAgIGdyaWQtYXV0by1mbG93OiBkZW5zZTtcbiAgfVxuICAuYWxsIHtcbiAgICBtYXJnaW46IDc1cHggMjBweDtcbiAgfVxuICBoMiB7XG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xuICAgIG1heC13aWR0aDogLW1vei1maXQtY29udGVudDtcbiAgICBib3JkZXItYm90dG9tOiBzb2xpZCAxcHggI2VmMTFhMTtcbiAgICBtYXJnaW4tbGVmdDogLTIwcHg7XG4gICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xuICB9XG48L3N0eWxlPlxuIl0sIm5hbWVzIjpbIkFwb2xsb0NsaWVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7aURBWW9DLEdBQVE7Ozs7Ozs7Ozs7Ozs7Ozs7NkNBQXpCLEdBQVU7OENBRmQsR0FBVTs7Ozs7OzsyRUFFVyxHQUFROzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7T0FUakMsUUFBUTtPQUViLFFBQVEsR0FBRyxxQkFBcUI7O1VBQzdCLFVBQVU7RUFDZixRQUFRLENBQUMsV0FBVzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBDQ3lETixHQUFlOzs7O3VDQUNYLEdBQVU7Ozs7Ozs7Ozs7Ozs7OztvRkFEZCxH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
